@model OrderVM
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Order Details";
}

<div class="container my-5">
    <div class="row mb-4">
        <div class="col-md-6 offset-md-3">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Order Lookup</h3>
                </div>
                <div class="card-body">
                    <form asp-controller="Agent" asp-action="FindOrder" method="post" class="d-flex">
                        <input type="number" name="orderId" class="form-control" placeholder="Enter Order ID" min="1" required>
                        <button type="submit" class="btn btn-primary ms-2">
                            <i class="bi bi-search"></i> Search
                        </button>
                    </form>
                    <small class="text-muted">Can only view order with payment method Cash On Delivery.</small>
                </div>
            </div>
        </div>
    </div>

    @if (Model != null && Model.Id > 0)
    {
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h3 class="mb-0">Order #@Model.Id</h3>
                        <div>
                            Payment: <span class="badge rounded-pill bg-light text-dark px-2"><span id="paymentStatusBadge">@Model.PaymentStatus</span></span>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <h5 class="text-muted">Order Information</h5>
                                    <p class="mb-1"><strong>Date:</strong> @Model.OrderDate.ToString("MMM dd, yyyy HH:mm")</p>
                                    <p class="mb-1"><strong>Status:</strong> @Model.Status</p>
                                    <p class="mb-1"><strong>User ID:</strong> @Model.UserId</p>
                                    <p class="mb-1"><strong>Payment Method:</strong> @Model.PaymentMethod</p>
                                    <p class="mb-1">
                                        <strong>Payment Status:</strong> 
                                        <span id="paymentStatusText">@Model.PaymentStatus</span>
                                        <button type="button" class="btn btn-sm btn-outline-primary ms-2" data-bs-toggle="modal" data-bs-target="#updatePaymentModal">
                                            <i class="bi bi-pencil"></i> Update
                                        </button>
                                    </p>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <h5 class="text-muted">Shipping Address</h5>
                                        @if (Model.ShippingAddress != null)
                                        {
                                            <address>
                                                @Html.Raw(FormatAddress(Model.ShippingAddress))
                                            </address>
                                        }
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <h5 class="text-muted">Billing Address</h5>
                                        @if (Model.BillingAddress != null)
                                        {
                                            <address>
                                                @Html.Raw(FormatAddress(Model.BillingAddress))
                                            </address>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card shadow-sm">
                    <div class="card-header bg-light">
                        <h4 class="mb-0">Order Items</h4>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="bg-light">
                                    <tr>
                                        <th>Item</th>
                                        <th>Quantity</th>
                                        <th>Unit Price</th>
                                        <th class="text-end">Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.OrderItems != null && Model.OrderItems.Any())
                                    {
                                        foreach (var item in Model.OrderItems)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <div class="ms-2">
                                                            <p class="fw-bold mb-0">@item.Book.Title</p>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>@item.Quantity</td>
                                                <td>@item.UnitPrice.ToString("C")</td>
                                                <td class="text-end">@((item.UnitPrice * item.Quantity).ToString("C"))</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="4" class="text-center py-3">No items in this order</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="fw-bold">
                                    <tr>
                                        <td colspan="3" class="text-end">Total:</td>
                                        <td class="text-end">@Model.TotalPrice.ToString("C")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end mt-4">
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary me-2">
                        <i class="bi bi-arrow-left"></i> New Search
                    </a>
                    <button class="btn btn-primary" onclick="window.print()">
                        <i class="bi bi-printer"></i> Print Order
                    </button>
                </div>
            </div>
        </div>

        <!-- Payment Status Update Modal -->
        <div class="modal fade" id="updatePaymentModal" tabindex="-1" aria-labelledby="updatePaymentModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="updatePaymentModalLabel">Update Payment Status</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="paymentStatusSelect" class="form-label">Payment Status</label>
                            <select class="form-select" id="paymentStatusSelect">
                                <option value="Pending" selected>Pending</option>
                                <option value="Paid">Paid</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="savePaymentStatus">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $("#paymentStatusSelect").val('@Model.PaymentStatus');

            $("#savePaymentStatus").click(function() {
                const newStatus = $("#paymentStatusSelect").val();
                const orderId = @Model.Id;

                $(this).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...');
                $(this).prop('disabled', true);

                $.ajax({
                    url: 'Agent/UpdatePaymentStatus',
                    type: 'POST',
                     data: {
                        orderId: orderId,
                        paymentStatus: newStatus
                    },
                    success: function(response) {
                        $("#paymentStatusText").text(newStatus);
                        $("#paymentStatusBadge").text(newStatus);
                        toastr.success("Payment status updated successfully");
                        $("#updatePaymentModal").modal('hide');
                    },
                    error: function(xhr, status, error) {
                        toastr.error("An error occured updading payment status");
                    },
                    complete: function() {
                        $("#savePaymentStatus").html('Save Changes');
                        $("#savePaymentStatus").prop('disabled', false);
                    }
                });
            });
        });
    </script>
}

@functions {
    public string FormatAddress(AddressVM address)
    {
        if (address == null) return string.Empty;

        var parts = new List<string>();
        if (!string.IsNullOrWhiteSpace(address.Name))
        {
            parts.Add(address.Name);
        }
        if (!string.IsNullOrWhiteSpace(address.StreetAddress))
        {
            parts.Add(address.StreetAddress);
        }
        var cityStateZip = new List<string>();
        if (!string.IsNullOrWhiteSpace(address.City))
        {
            cityStateZip.Add(address.City);
        }

        if (!string.IsNullOrWhiteSpace(address.PostCode))
        {
            cityStateZip.Add(address.PostCode);
        }

        if (cityStateZip.Count > 0)
        {
            parts.Add(string.Join(", ", cityStateZip));
        }
        return string.Join("<br>", parts);
    }
}